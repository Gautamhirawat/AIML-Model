# -*- coding: utf-8 -*-
"""Real_Estate_Pricing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uF4lwBT91Zh4LXMSRPCsK1PIuKJlePwQ
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('Real_Estate_Pricing.csv')

df.head()

df.info()

df.describe()

from sklearn.model_selection import train_test_split
del df['Transaction date']

x= df.drop("House price of unit area",axis=1)
y= df["House price of unit area"]

x_train, x_test , y_train , y_test = train_test_split(x,y,test_size = 0.3, random_state = 42)

x_train

y_train

from sklearn.linear_model import LinearRegression

lm = LinearRegression()

model = lm.fit(x_train,y_train)

lm.coef_

cfd = pd.DataFrame(lm.coef_ , x.columns , columns=['Coef'])
print(cfd)

model.score(x_test, y_test)

predications = lm.predict(x_test)

predications

sns.scatterplot(x = y_test , y = predications)

from sklearn.metrics import mean_absolute_error , mean_squared_error
import math

print('MAE : ' , mean_absolute_error(y_test , predications))
print('MSE : ' , mean_squared_error(y_test , predications))
print('RMSE: ', math.sqrt(mean_squared_error(y_test , predications)))

residuals = y_test - predications

sns.displot(residuals , bins = 30 , kde = True)

import pylab
import scipy.stats as stats

stats.probplot(residuals , dist = 'norm' , plot = pylab)
pylab.show()

